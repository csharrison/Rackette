(define (append l1 l2)
	(if (empty? l1)
		l2
		(cons (first l1) (append (rest l1) l2))))

(define (subsets lst)
	(if (empty? lst)
		(list (list))
		(let ((r (subsets (rest lst))))
			(append (map (lambda (x) (cons (first lst) x)) r) r))))

(print (subsets (list 1 2 3 4)))
(print (subsets empty))